/*! StopWatch v1.2.0 | (c) Tobias Hennig | License MIT */
!function(t,r){"object"==typeof exports&&"undefined"!=typeof module?module.exports=r():"function"==typeof define&&define.amd?define(r):t.StopWatch=r()}(this,function(){"use strict";var t=!(!performance||!performance.mark),r=function(t){this.name=t,this.category,this.duration=-1,this.startTime=-1};r.now=function(){return performance&&performance.now?performance.now():Date.now()},r.prototype.start=function(){return this.startTime=this.constructor.now(),t&&performance.mark("stopwatch:mark_"+this.name+"_start"),this},r.prototype.stop=function(){if(-1===this.startTime)throw new Error("Start time is missing.");var r="stopwatch:mark_"+this.name+"_";return this.duration=this.constructor.now()-this.startTime,t&&performance.getEntriesByName(r+"start").length>0&&(performance.mark(r+"stop"),performance.measure("stopwatch:measure_"+this.name,r+"start",r+"stop")),this},r.prototype.clear=function(){return performance.clearMarks("stopwatch:mark_"+this.name+"_start"),performance.clearMarks("stopwatch:mark_"+this.name+"_stop"),performance.clearMeasures("stopwatch:measure_"+this.name),this},r.prototype.send=function(){if(!this.category)throw new Error("Category is missing.");return window.ga&&this.duration>=0&&window.ga("send","timing",this.category,this.name,Math.round(this.duration)),this};var n=function(){this._timings=[]};return n.find=function(t,r){return t.find(function(t){return t.name===r})||null},n.clear=function(t,r){for(var n=0;n<t.length;n++)if(t[n].name===r.name){t.splice(n,1);break}},n.send=function(t){t.forEach(function(t){return t.send()})},n.prototype.create=function(t,n){if("string"!=typeof t)throw new Error("Parameter is missing.");var e=new r(t);return n&&n.category&&(e.category=n.category),this._timings.push(e),e},n.prototype.get=function(t){var r=this._timings;return"string"==typeof t?this.constructor.find(r,t):this._timings},n.prototype.clear=function(t){var r=this._timings;if("string"==typeof t){var n=this.constructor.find(r,t);n.clear(),this.constructor.clear(r,n)}else r.forEach(function(t){return t.clear()}),r.length=0;return this},n.prototype.send=function(t){var r=this._timings;if("string"==typeof t){var n=this.constructor.find(r,t);if(!n)throw new Error("Timing is missing.");n.send()}else this.constructor.send(r);return this},new n});
